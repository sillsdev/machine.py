name: CI build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Load cached Poetry installation
        uses: actions/cache@v2
        with:
          path: ~/.local # the path depends on the OS
          key: poetry-0 # increment to reset cache
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      - name: Lint with Black
        run: poetry run black . --check --diff
      - name: Lint with Flake8
        run: poetry run flake8 . --statistics --show-source
      - name: Lint with isort
        run: poetry run isort . --check-only
      - name: Setup Node for pyright
        uses: actions/setup-node@v2
        with:
          node-version: "12"
      - name: Lint with pyright
        run: |
          npm install -g pyright@1.1.232
          poetry run pyright
      - name: Test with pytest
        run: poetry run pytest
      - name: Publish
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
          poetry publish --build
