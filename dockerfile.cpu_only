# syntax=docker/dockerfile:1.7-labs
ARG PYTHON_VERSION=3.12
ARG UBUNTU_VERSION=noble
ARG POETRY_VERSION=1.6.1

FROM python:$PYTHON_VERSION-slim AS builder
ARG POETRY_VERSION

ENV POETRY_HOME=/opt/poetry
ENV POETRY_VENV=/opt/poetry-venv
ENV POETRY_CACHE_DIR=/opt/.cache

# Install poetry separated from system interpreter
RUN python3 -m venv $POETRY_VENV \
    && $POETRY_VENV/bin/pip install -U pip setuptools \
    && $POETRY_VENV/bin/pip install poetry==${POETRY_VERSION}

# Add `poetry` to PATH
ENV PATH="${PATH}:${POETRY_VENV}/bin"

WORKDIR /src
COPY poetry.lock pyproject.toml /src
RUN poetry export --extras="thot jobs" --without-hashes -f requirements.txt > requirements.txt


FROM python:$PYTHON_VERSION
WORKDIR /root

RUN apt-get update && \
    apt-get install --no-install-recommends -y \
    python3-pip \
    # these are needed for ClearML
    git libsm6 libxext6 libxrender-dev libglib2.0-0 && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

COPY --from=builder /src/requirements.txt .
COPY --exclude=.* . .
RUN --mount=type=cache,target=/root/.cache \
    python -m pip install --no-cache-dir -r requirements.txt && rm requirements.txt && \
    # these are needed for clearml to run
    python -m pip install --no-cache-dir clearml-agent setuptools
RUN python -m pip install --no-deps . && rm -r /root/*
ENV CLEARML_AGENT_SKIP_PYTHON_ENV_INSTALL=1 \
    CLEARML_AGENT_SKIP_PIP_VENV_INSTALL=1

CMD ["bash"]
